"use strict";sap.ui.define(["sap/base/Log","./MetadataHandler"],function(e,t){"use strict";function a(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const n=a(t);const o=n.extend("cc.spreadsheetimporter.v1_1_1.MetadataHandlerV2",{constructor:function e(t){n.prototype.constructor.call(this,t)},getLabelList:function t(a,n,o,l){let s=new Map;const r=o.property;const d=o["sap:label"];e.debug("SpreadsheetUpload: Annotations",undefined,"SpreadsheetUpload: MetadataHandler",()=>this.spreadsheetUploadController.component.logger.returnObject(o));if(!this.spreadsheetUploadController.component.getSpreadsheetFileName()&&d){this.spreadsheetUploadController.component.setSpreadsheetFileName(`${d}.xlsx`)}else if(!this.spreadsheetUploadController.component.getSpreadsheetFileName()&&!d){this.spreadsheetUploadController.component.setSpreadsheetFileName(`Template.xlsx`)}if(a.length>0&&l.length>0){a=a.filter(e=>!l.includes(e))}if(a.length>0){for(const t of a){const a=r.find(e=>e.name===t);if(a){let e={};e.label=this.getLabel(o,r,a,t);if(!e.label){e.label=t}e.type=a["type"];e.maxLength=a["maxLength"];s.set(t,e)}else{e.warning(`SpreadsheetUpload: Property ${t} not found`)}}}else if(a.length===0&&l.length>0){for(const t of r){if(l.includes(t.name)){continue}let a=false;const n=t.name;try{a=t["com.sap.vocabularies.UI.v1.Hidden"].Bool==="true"}catch(a){e.debug(`No hidden property on ${t.name}`,undefined,"SpreadsheetUpload: MetadataHandler")}if(!a&&!n.startsWith("SAP__")){let e={};e.label=this.getLabel(o,r,t,n);e.type=t["type"];e.maxLength=t["maxLength"];s.set(n,e)}}}else{for(const t of r){let a=false;const n=t.name;try{a=t["com.sap.vocabularies.UI.v1.Hidden"].Bool==="true"}catch(a){e.debug(`No hidden property on ${t.name}`,undefined,"SpreadsheetUpload: MetadataHandler")}if(!a&&!n.startsWith("SAP__")){let e={};e.label=this.getLabel(o,r,t,n);e.type=t["type"];e.maxLength=t["maxLength"];s.set(n,e)}}}return s},getLabel:function t(a,n,o,l){let s="";if(o["sap:label"]){s=o["sap:label"]}try{const e=a["com.sap.vocabularies.UI.v1.LineItem"];s=e.find(e=>e.Value.Path===l).Label.String}catch(t){e.debug(`SpreadsheetUpload: ${l} not found as a LineItem Label`,undefined,"SpreadsheetUpload: MetadataHandlerV2")}if(s.startsWith("{")&&s.endsWith("}")){try{s=this.parseI18nText(s,this.spreadsheetUploadController.view)}catch(t){e.debug(`SpreadsheetUpload: ${s} not found as a Resource Bundle and i18n text`,undefined,"SpreadsheetUpload: MetadataHandlerV2")}}if(s===""){s=l}return s},getKeyList:function e(t){let a=[];if(this.spreadsheetUploadController.component.getSkipMandatoryFieldCheck()){return a}for(const e of t.property){const t=e.name;if(t.startsWith("SAP__")){continue}if(!this.spreadsheetUploadController.component.getSkipMandatoryFieldCheck()&&e["com.sap.vocabularies.Common.v1.FieldControl"]&&e["com.sap.vocabularies.Common.v1.FieldControl"]["EnumMember"]&&e["com.sap.vocabularies.Common.v1.FieldControl"]["EnumMember"]==="com.sap.vocabularies.Common.v1.FieldControlType/Mandatory"){a.push(t)}}return a}});return o});
//# sourceMappingURL=MetadataHandlerV2.js.map