"use strict";sap.ui.define(["sap/base/Log","./MetadataHandler"],function(e,t){"use strict";function o(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const a=o(t);const n=a.extend("cc.spreadsheetimporter.v1_1_1.MetadataHandlerV4",{constructor:function e(t){a.prototype.constructor.call(this,t)},getLabelList:function t(o,a,n){let s=new Map;let l;var r=this.spreadsheetUploadController.context.getModel().getMetaModel().getData()["$Annotations"];const d=this.spreadsheetUploadController.context.getModel().getMetaModel().getData()[a];e.debug("SpreadsheetUpload: Annotations",undefined,"SpreadsheetUpload: MetadataHandler",()=>this.spreadsheetUploadController.component.logger.returnObject(this.spreadsheetUploadController.context.getModel().getMetaModel().getData()));try{l=r[a]["@com.sap.vocabularies.UI.v1.Facets"][0].Label}catch(t){e.debug(`SpreadsheetUpload: Facet Label not found`,undefined,"SpreadsheetUpload: MetadataHandler")}if(!this.spreadsheetUploadController.component.getSpreadsheetFileName()&&l){this.spreadsheetUploadController.component.setSpreadsheetFileName(`${l}.xlsx`)}else if(!this.spreadsheetUploadController.component.getSpreadsheetFileName()&&!l){this.spreadsheetUploadController.component.setSpreadsheetFileName(`Template.xlsx`)}if(o.length>0&&n.length>0){o=o.filter(e=>!n.includes(e))}if(o.length>0){for(const t of o){const o=d[t];if(o){const e=r[`${a}/${t}`];let n={};n.label=this.getLabel(r,d,t,e,a);if(!n.label){n.label=t}n.type=o.$Type;n.maxLength=o.$MaxLength;s.set(t,n)}else{e.warning(`SpreadsheetUpload: Property ${t} not found`,undefined,"SpreadsheetUpload: MetadataHandler")}}}else if(o.length===0&&n.length>0){const e=[];for(const t in d){const o=d[t];if(o["$kind"]==="Property"){e.push([t,o])}}for(const[t,o]of e){if(n.includes(t)){continue}const e=r[`${a}/${t}`];if(e&&!e["@com.sap.vocabularies.UI.v1.Hidden"]&&!t.startsWith("SAP__")){let n={};n.label=this.getLabel(r,d,t,e,a);if(!n.label){n.label=t}n.type=o.$Type;n.maxLength=o.$MaxLength;s.set(t,n)}}}else{const e=[];for(const t in d){const o=d[t];if(o["$kind"]==="Property"){e.push([t,o])}}for(const[t,o]of e){const e=r[`${a}/${t}`];if(e&&!e["@com.sap.vocabularies.UI.v1.Hidden"]&&!t.startsWith("SAP__")){let n={};n.label=this.getLabel(r,d,t,e,a);if(!n.label){n.label=t}n.type=o.$Type;n.maxLength=o.$MaxLength;s.set(t,n)}}}return s},getLabel:function t(o,a,n,s,l){let r="";if(s&&s["@com.sap.vocabularies.Common.v1.Label"]){r=s["@com.sap.vocabularies.Common.v1.Label"]}if(r===""){try{const e=o[l]["@com.sap.vocabularies.UI.v1.LineItem"];r=e.find(e=>e.Value.$Path===n).Label}catch(t){e.debug(`v: ${n} not found as a LineItem Label`,undefined,"SpreadsheetUpload: MetadataHandlerV4")}}if(r.startsWith("{")&&r.endsWith("}")){try{r=this.parseI18nText(r,this.spreadsheetUploadController.view)}catch(t){e.debug(`SpreadsheetUpload: ${r} not found as a Resource Bundle and i18n text`,undefined,"SpreadsheetUpload: MetadataHandlerV4")}}if(r===""){r=n}return r},getKeyList:function e(t){let o=[];if(this.spreadsheetUploadController.component.getSkipMandatoryFieldCheck()){return o}var a=this.spreadsheetUploadController.context.getModel().getMetaModel().getData()["$Annotations"];const n=this.spreadsheetUploadController.context.getModel().getMetaModel().getData()[t];const s=a[t]?.["@com.sap.vocabularies.Common.v1.Messages"]??undefined;const l=Object.entries(n).filter(e=>{let[t,o]=e;return o["$kind"]==="Property"});for(const[e,n]of l){const n=a[`${t}/${e}`];if(!n){continue}if(e===s?.$Path||e.startsWith("SAP__")){continue}if(!this.spreadsheetUploadController.component.getSkipMandatoryFieldCheck()&&n["@com.sap.vocabularies.Common.v1.FieldControl"]&&n["@com.sap.vocabularies.Common.v1.FieldControl"]["$EnumMember"]&&n["@com.sap.vocabularies.Common.v1.FieldControl"]["$EnumMember"]==="com.sap.vocabularies.Common.v1.FieldControlType/Mandatory"){o.push(e)}}return o}});return n});
//# sourceMappingURL=MetadataHandlerV4.js.map