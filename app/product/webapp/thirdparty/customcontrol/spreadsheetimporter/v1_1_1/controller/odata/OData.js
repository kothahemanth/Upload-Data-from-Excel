"use strict";sap.ui.define(["sap/ui/base/ManagedObject","../dialog/ODataMessageHandler","sap/base/Log","../TableSelector","sap/ui/model/json/JSONModel","sap/ui/core/Fragment","../Util"],function(e,t,a,s,r,o,n){"use strict";function i(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const l=i(t);const c=i(s);const g=i(n);const h=e.extend("cc.spreadsheetimporter.v1_1_1.OData",{constructor:function t(a){e.prototype.constructor.call(this);this._tables=[];this.odataMessageHandler=new l(a);this.spreadsheetUploadController=a},callOdata:async function e(t,s,r){const o=r.component;const n=r.tableObject;const i=r.payloadArray;const l=r.binding;const c=r.context;r.errorsFound=false;try{const e=n.getModel();await this.createBusyDialog(r);const h=this.processPayloadArray(o.getBatchSize(),i);this.busyDialog.getModel("busyModel").setProperty("/progressText",`0/${i.length}`);let d=0;let u=0;for(const t of h){try{for(let s of t){let t;if(o.getCreateActiveEntity()){s.IsActiveEntity=true}try{t=await g.fireEventAsync("changeBeforeCreate",{payload:s},o)}catch(e){a.error("Error while calling the changeBeforeCreate event",e,"SpreadsheetUpload: callOdata")}if(t.returnValue){s=t.returnValue}this.createAsync(e,l,s)}await this.submitChanges(e);let n=await this.checkForErrors(e,l,o.getShowBackendErrorMessages());if(n){a.error("Error while calling the odata service","SpreadsheetUpload: callOdata");if(!o.getContinueOnError()){this.busyDialog.close();r.errorsFound=true;this.resetContexts();s("Error while calling the odata service");break}}else{await this.waitForCreation()}if(!o.getCreateActiveEntity()&&o.getActivateDraft()&&!n){await this.waitForDraft()}this.resetContexts();d=d+t.length/i.length*100;u=u+t.length;this.busyDialog.getModel("busyModel").setProperty("/progressPercent",d);this.busyDialog.getModel("busyModel").setProperty("/progressText",`${u} / ${i.length}`)}catch(e){if(o.getContinueOnError()){a.error("Error while calling the odata service",e,"SpreadsheetUpload: callOdata")}else{throw e}}}r.refreshBinding(c,l,n.getId());this.busyDialog.close();t()}catch(e){this.busyDialog.close();this.resetContexts();a.error("Error while calling the odata service",e,"SpreadsheetUpload: callOdata");await this.checkForODataErrors(o.getShowBackendErrorMessages());s(e)}},getBinding:function e(t){if(t.getMetadata().getName()==="sap.m.Table"||t.getMetadata().getName()==="sap.m.List"){return t.getBinding("items")}if(t.getMetadata().getName()==="sap.ui.table.Table"){return t.getBinding("rows")}},_getActionName:function e(t,a){var s=t.getModel(),r=s.getMetaModel(),o=r.getMetaPath(t.getPath());return r.getObject("".concat(o,"@com.sap.vocabularies.Common.v1.DraftRoot/").concat(a))},processPayloadArray:function e(t,a){if(t>0){let e=[];const s=Math.ceil(a.length/t);const r=Math.ceil(a.length/s);for(let t=0;t<a.length;t+=r){e.push(a.slice(t,t+r))}return e}else{return[a]}},getTableObject:async function e(t,a,s){if(!t){this.tables=a.findAggregatedObjects(true,function(e){return e.isA("sap.m.Table")||e.isA("sap.ui.table.Table")});if(this.tables.length>1&&!s.component.getUseTableSelector()){throw new Error("Found more than one table on Object Page.\n Please specify table in option 'tableId'")}else if(this.tables.length>1&&s.component.getUseTableSelector()){const e=new c(a);let t;try{t=await e.chooseTable()}catch(e){throw new Error(s.util.geti18nText("spreadsheetimporter.tableSelectorDialogCancel"))}return t}else if(this.tables.length===0){throw new Error("Found more than one table on Object Page.\n Please specify table in option 'tableId'")}else{return this.tables[0]}}else{return a.byId(t)}},createBusyDialog:async function e(t){const a=new r({progressPercent:0,progressText:"0"});if(!this.busyDialog){this.busyDialog=await o.load({name:"cc.spreadsheetimporter.v1_1_1.fragment.BusyDialogProgress",controller:this})}this.busyDialog.setModel(a,"busyModel");this.busyDialog.setModel(t.component.getModel("device"),"device");this.busyDialog.setModel(t.component.getModel("i18n"),"i18n");this.busyDialog.open()},checkForODataErrors:async function e(t){if(t){try{const e=await g.loadUI5RessourceAsync("sap/ui/core/Messaging");const t=e.getMessageModel().getData();if(t.length>0){this.odataMessageHandler.displayMessages(t)}return}catch(e){a.debug("sap/ui/core/Messaging not found",undefined,"SpreadsheetUpload: checkForODataErrors")}const e=sap.ui.getCore().getMessageManager().getMessageModel().getData();if(e.length>0){this.odataMessageHandler.displayMessages(e)}}},get tables(){return this._tables},set tables(e){this._tables=e}});return h});
//# sourceMappingURL=OData.js.map